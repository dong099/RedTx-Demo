<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.sc</groupId>
        <artifactId>RedTx-Demo</artifactId>
    	<version>1.0</version>
    </parent>

    <artifactId>consul-service-c</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>
    <name>${project.artifactId}</name>

    <dependencies>
    
        <!-- 加入common依赖 -->
        <dependency>
            <groupId>com.sc</groupId>
            <artifactId>consul-common</artifactId>
            <version>${project.version}</version>
        </dependency> 
        
        <dependency>
			<groupId>com.sc</groupId>
			<artifactId>redtx-core</artifactId>
			<version>${project.version}</version>
		</dependency>
    
       <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
       </dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
		</dependency>

		<dependency>
        <groupId>org.springframework.cloud</groupId>
        	<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
 

		
		<!-- HYSTRIX -->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
  		</dependency> 
  		<!-- spring-boot-starter-actuator中实现了Hystrix metrics stream。暴露/hystrix.stream作为一个管理端点 -->
  		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
            	<exclusion>
            		<groupId>ch.qos.logback</groupId>
            		<artifactId>logback-classic</artifactId>
            	</exclusion>
            </exclusions>
  		</dependency>
        
        <!-- now using standalone version
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
        </dependency> 
         -->
  		
  		<!-- RIBBON -->
  		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency> 
        
		<!--n 分布式服务调用链路跟踪实现的核心依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency> 
        
        <!-- Hystrix Turbine将每个服务Hystrix Dashboard数据进行了整合 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-turbine</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>
						spring-cloud-starter-netflix-eureka-client
					</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
 
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency> 
	
		<!-- 
		https://mvnrepository.com/artifact/org.redisson/redisson
		https://github.com/redisson/redisson#quick-start
		 -->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.10.6</version>
		</dependency>
		
       <!-- mybatis common packages 版本匹配 http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/ -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.28</version>
		</dependency>   
		<!-- alibaba的druid数据库连接池 对于使用mysql jdbc 6.0的 必须更新druid到最新的1.1.6， 否则druid无法支持分布式事务 
			<artifactId>druid</artifactId> <version>1.0.29</version> -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.10</version>
		</dependency>			
				
        <dependency>  
		    <groupId>org.slf4j</groupId>  
		    <artifactId>slf4j-log4j12</artifactId>  
		</dependency>		
		

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		        
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
             -->
        </plugins>
    </build>

</project>