

# Spring boot application
spring.application.name=DubboServiceC
server.port=4003


# Service Version
demo.service.version=1.0.0

# Dubbo Config properties
dubbo.application.id=DubboServiceC
dubbo.application.name=DubboServiceC


## ProtocolConfig Bean
dubbo.protocol.id=dubbo
dubbo.registry.address=zookeeper://${ZOOKEEPER_HOST:10.1.32.180}:2181
#address="zookeeper://10.20.153.10:2181?backup=10.20.153.11:2181,10.20.153.12:2181"
#http://dubbo.apache.org/en-us/docs/user/references/registry/zookeeper.html
dubbo.protocol.name=dubbo
dubbo.protocol.port=20883
dubbo.scan.base-packages=com.sc.dubbo.svcc.service
dubbo.provider.loadbalance=roundrobin

# druid , FOR WRITING DB
spring.datasource.master-db.name=masterDb
spring.datasource.master-db.url=jdbc:mysql://10.2.28.8:3306/db_c?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.master-db.username=root
spring.datasource.master-db.password=${MYSQL_PWD:password}
      #type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.master-db.driver-class-name=com.mysql.jdbc.Driver    
      #最大活跃数
spring.datasource.master-db.maxActive=20
      #初始化数量
spring.datasource.master-db.initialSize=1
      #配置获取连接等待超时的时间
spring.datasource.master-db.maxWait=60000
spring.datasource.master-db.minIdle=1
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.master-db.timeBetweenEvictionRunsMillis=60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.master-db.minEvictableIdleTimeMillis=300000


redtx.client.mgrAddrs=${REDTX_SERVER:10.2.1.63:9011}
